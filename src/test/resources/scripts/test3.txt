#!/usr/bin/env rookscript -i

entry main()
{
	b = bufnew(32);
	println(b);

	println(bufsetsize(b, 16));

	b = bufwrap([1,2,3,4,5,6,7,8]);
	println(b);
	println(bufsetsize(b, 4));
	println(bufsetsize(b, 8));
	
	println(bufunwrap(b));
	
	b = bufwrap([1,2,3,4,5,6,7,8]);
	c = b;
	println(b == c);
	println(b);
	println(bufslice(b, 4, 4));
	println(b->bufsetpos(2)->bufslice(2));
	println(bufslice(b) == b);
	
	bufsetpos(b);
	d = bufnew(64);
	println(bufread(d, b));
	println(d);
	println(buffill(d));
	println(d->bufsetpos(0)->buffill(4));
	println(d->bufsetpos(0)->buffill(32, 32));
	println(d->bufsetpos(0)->buffill(39, 32, 16));
	println(d->bufsetpos(0)->buffill(99, 32, 60)); // should make error
	println(d);
	println(bufgetpos(d));

	bufsetsize(d, 16);

	println(d->bufsetpos(0)->buffill(d)->bufsetpos(0));
	println(bufputbyte(d, 255));
	println(bufputbyte(d, 128, 3));
	println(bufputbyte(d));
	println(bufsetpos(d, length(d)));
	println(bufputbyte(d)); // should make error
	bufsetpos(d, 0);
	println(bufgetbyte(d));
	println(bufgetbyte(d, 3));
	println(bufgetbyte(d, -1)); // should make error

	println(d->bufsetpos(0)->buffill(d)->bufsetpos(0)->bufsetorder(false));
	println(bufputshort(d, 0xeeff));
	println(bufputshort(d, 0xeeff, 4));
	bufsetorder(d, true);
	println(bufputshort(d, 0xeeff));
	println(bufputshort(d, 0xeeff, 6));
	println(bufputshort(d, 0xeeff, 15));
	bufsetorder(d, false)->bufsetpos(0);
	println(bufgetshort(d));
	println(bufgetshort(d, 4));
	bufsetorder(d, true);
	println(bufgetshort(d));
	println(bufgetshort(d, 6));
	println(bufgetshort(d, 15));
	
	println(d->bufsetpos(0)->buffill(d)->bufsetpos(0)->bufsetorder(false));
	println(bufputushort(d, 0xeeff));
	println(bufputushort(d, 0xeeff, 4));
	bufsetorder(d, true);
	println(bufputushort(d, 0xeeff));
	println(bufputushort(d, 0xeeff, 6));
	println(bufputushort(d, 0xeeff, 15));
	bufsetorder(d, false)->bufsetpos(0);
	println(bufgetushort(d));
	println(bufgetushort(d, 4));
	bufsetorder(d, true);
	println(bufgetushort(d));
	println(bufgetushort(d, 6));
	println(bufgetushort(d, 15));
	
	bufsetsize(d, 32);
	
	println(d->bufsetpos(0)->buffill(d)->bufsetpos(0)->bufsetorder(false));
	println(bufputint(d, 0xffeeddcc));
	println(bufputint(d, 0xffeeddcc, 8));
	bufsetorder(d, true);
	println(bufputint(d, 0xffeeddcc));
	println(bufputint(d, 0xffeeddcc, 12));
	println(bufputint(d, 0xffeeddcc, 29));
	bufsetorder(d, false)->bufsetpos(0);
	println(bufgetint(d));
	println(bufgetint(d, 8));
	bufsetorder(d, true);
	println(bufgetint(d));
	println(bufgetint(d, 12));
	println(bufgetint(d, 29));
	
	println(d->bufsetpos(0)->buffill(d)->bufsetpos(0)->bufsetorder(false));
	println(bufputuint(d, 0xffeeddcc));
	println(bufputuint(d, 0xffeeddcc, 8));
	bufsetorder(d, true);
	println(bufputuint(d, 0xffeeddcc));
	println(bufputuint(d, 0xffeeddcc, 12));
	println(bufputuint(d, 0xffeeddcc, 29));
	bufsetorder(d, false)->bufsetpos(0);
	println(bufgetuint(d));
	println(bufgetuint(d, 8));
	bufsetorder(d, true);
	println(bufgetuint(d));
	println(bufgetuint(d, 12));
	println(bufgetuint(d, 29));
	
	println(d->bufsetpos(0)->buffill(d)->bufsetpos(0)->bufsetorder(false));
	println(bufputfloat(d, 34.0));
	println(bufputfloat(d, -239.234, 8));
	bufsetorder(d, true);
	println(bufputfloat(d, NaN));
	println(bufputfloat(d, Infinity, 12));
	println(bufputfloat(d, -Infinity, 29));
	bufsetorder(d, false)->bufsetpos(0);
	println(bufgetfloat(d));
	println(bufgetfloat(d, 8));
	bufsetorder(d, true);
	println(bufgetfloat(d));
	println(bufgetfloat(d, 12));
	println(bufgetfloat(d, 29));
	
	bufsetsize(d, 64);
	
	println(d->bufsetpos(0)->buffill(d)->bufsetpos(0)->bufsetorder(false));
	println(bufputlong(d, 0xffeeddccbbaa9988));
	println(bufputlong(d, 0xffeeddccbbaa9988, 16));
	bufsetorder(d, true);
	println(bufputlong(d, 0xffeeddccbbaa9988));
	println(bufputlong(d, 0xffeeddccbbaa9988, 24));
	println(bufputlong(d, 0xffeeddccbbaa9988, 57));
	bufsetorder(d, false)->bufsetpos(0);
	println(bufgetlong(d));
	println(bufgetlong(d, 16));
	bufsetorder(d, true);
	println(bufgetlong(d));
	println(bufgetlong(d, 24));
	println(bufgetlong(d, 57));
	
	println(d->bufsetpos(0)->buffill(d)->bufsetpos(0)->bufsetorder(false));
	println(bufputdouble(d, 34.0));
	println(bufputdouble(d, -239.234, 16));
	bufsetorder(d, true);
	println(bufputdouble(d, NaN));
	println(bufputdouble(d, Infinity, 24));
	println(bufputdouble(d, -Infinity, 57));
	bufsetorder(d, false)->bufsetpos(0);
	println(bufgetdouble(d));
	println(bufgetdouble(d, 16));
	bufsetorder(d, true);
	println(bufgetdouble(d));
	println(bufgetdouble(d, 24));
	println(bufgetdouble(d, 57));
	
	println(d->bufsetorder(false)->bufsetpos(0)->buffill(d)->bufsetpos(0));
	lens = [0, 0, 0, 0];
	lens[0] = bufputstr(d, "apple")->bufgetpos();
	lens[1] = bufputstr(d, "banana")->bufgetpos() - lens[0];
	lens[2] = bufputstr(d, "crap and stüff")->bufgetpos() - (lens[0] + lens[1]);
	lens[3] = bufputstr(d, "There's even more junk!")->bufgetpos() - (lens[0] + lens[1] + lens[2]);
	println(d);
	println(lens);
	bufsetpos(d);
	println(d);
	for (i = 0; i < length(lens); i += 1)
	{
		println(bufgetstr(d, lens[i]));
		println(d);
	}
}
